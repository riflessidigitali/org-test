{
  "version": 3,
  "sources": ["../dist-src/index.js", "../dist-src/compose-create-or-update-text-file.js", "../dist-src/get-file-content.js", "../dist-src/utils.js", "../dist-src/version.js"],
  "sourcesContent": ["import { Octokit } from \"@octokit/core\";\nimport { composeCreateOrUpdateTextFile } from \"./compose-create-or-update-text-file\";\nimport { VERSION } from \"./version\";\nimport { composeCreateOrUpdateTextFile as composeCreateOrUpdateTextFile2 } from \"./compose-create-or-update-text-file\";\nfunction createOrUpdateTextFile(octokit) {\n  return {\n    createOrUpdateTextFile(options) {\n      return composeCreateOrUpdateTextFile(octokit, options);\n    }\n  };\n}\ncreateOrUpdateTextFile.VERSION = VERSION;\nexport {\n  composeCreateOrUpdateTextFile2 as composeCreateOrUpdateTextFile,\n  createOrUpdateTextFile\n};\n", "import { Octokit } from \"@octokit/core\";\nimport { getFileContents } from \"./get-file-content\";\nimport { utf8ToBase64 } from \"./utils\";\nasync function composeCreateOrUpdateTextFile(octokit, options) {\n  const {\n    content: contentOrFn,\n    message,\n    committer,\n    author,\n    ...getOptions\n  } = options;\n  const currentFile = await getFileContents(octokit, getOptions);\n  const content = typeof contentOrFn === \"function\" ? await contentOrFn({\n    exists: currentFile.content !== null,\n    content: currentFile.content\n  }) : contentOrFn;\n  if (content === currentFile.content) {\n    return {\n      updated: false,\n      deleted: false,\n      data: {},\n      headers: {}\n    };\n  }\n  if (currentFile.sha && content === null) {\n    const response2 = await octokit.request(\n      \"DELETE /repos/{owner}/{repo}/contents/{path}\",\n      {\n        ...getOptions,\n        message,\n        sha: currentFile.sha\n      }\n    );\n    return {\n      ...response2,\n      updated: true,\n      deleted: true\n    };\n  }\n  const response = await octokit.request(\n    \"PUT /repos/{owner}/{repo}/contents/{path}\",\n    {\n      ...getOptions,\n      message,\n      ...currentFile,\n      content: utf8ToBase64(content)\n    }\n  );\n  return {\n    ...response,\n    updated: true,\n    deleted: false,\n    content\n  };\n}\nexport {\n  composeCreateOrUpdateTextFile\n};\n", "import { RequestError } from \"@octokit/request-error\";\nimport { Octokit } from \"@octokit/core\";\nimport { base64ToUtf8 } from \"./utils\";\nasync function getFileContents(octokit, options) {\n  const route = \"GET /repos/{owner}/{repo}/contents/{path}\";\n  const { branch, ...parameters } = options;\n  const getContentsParameters = {\n    ...parameters,\n    ref: branch\n  };\n  const requestOptions = octokit.request.endpoint(route, getContentsParameters);\n  const { data } = await octokit.request(route, getContentsParameters).catch((error) => {\n    if (error.status !== 404)\n      throw error;\n    return {\n      data: {\n        content: null,\n        type: \"\",\n        sha: \"\"\n      }\n    };\n  });\n  if (Array.isArray(data)) {\n    throw new RequestError(\n      `[@octokit/plugin-create-or-update-text-file] ${requestOptions.url} is a directory`,\n      403,\n      {\n        request: requestOptions\n      }\n    );\n  }\n  if (!(\"sha\" in data && \"content\" in data)) {\n    throw new RequestError(\n      `[@octokit/plugin-create-or-update-text-file] ${requestOptions.url} is not a file, but a ${data.type}`,\n      403,\n      {\n        request: requestOptions\n      }\n    );\n  }\n  if (data.content === null) {\n    return {\n      content: null\n    };\n  }\n  try {\n    return {\n      content: base64ToUtf8(data.content),\n      sha: data.sha\n    };\n  } catch (error) {\n    if (error.message !== \"URI malformed\")\n      throw error;\n    throw new RequestError(\n      `[@octokit/plugin-create-or-update-text-file] ${requestOptions.url} is a binary file, only text files are supported`,\n      403,\n      {\n        request: requestOptions\n      }\n    );\n  }\n}\nexport {\n  getFileContents\n};\n", "const isNode = globalThis.process && globalThis.process.release && globalThis.process.release.name;\nfunction nodeUtf8ToBase64(data) {\n  return Buffer.from(data, \"utf-8\").toString(\"base64\");\n}\nfunction nodeBase64ToUtf8(data) {\n  return Buffer.from(data, \"base64\").toString(\"utf-8\");\n}\nfunction browserUtf8ToBase64(data) {\n  return btoa(\n    encodeURIComponent(data).replace(\n      /%([0-9A-F]{2})/g,\n      function toSolidBytes(_match, p1) {\n        return String.fromCharCode(\"0x\" + p1);\n      }\n    )\n  );\n}\nfunction browserBase64ToUtf8(data) {\n  return decodeURIComponent(\n    atob(data).split(\"\").map(function(c) {\n      return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(\"\")\n  );\n}\nconst utf8ToBase64 = isNode ? nodeUtf8ToBase64 : browserUtf8ToBase64;\nconst base64ToUtf8 = isNode ? nodeBase64ToUtf8 : browserBase64ToUtf8;\nexport {\n  base64ToUtf8,\n  utf8ToBase64\n};\n", "const VERSION = \"4.0.1\";\nexport {\n  VERSION\n};\n"],
  "mappings": "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",
  "names": ["import_core", "import_core"]
}
